#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16 17>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <23 24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC      &kp Q  &kp W  &kp E     &kp R        &kp T                           &none         &kp Y        &kp U  &kp I      &kp O    &kp O          &kp BSPC
&kp TAB      &kp A  &kp S  &kp D     &kp F        &kp G                    &none  &none  &none  &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&bootloader  &kp Z  &kp X  &kp C     &kp V        &kp B           &none           &none         &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH      &bootloader
                           &kp LGUI  &lt 1 SPACE  &kp LEFT_SHIFT                                &lt 3 ENTER  &mo 2  &kp RALT
            >;
        };

        nums {
            display-name = "NUMBER";
            bindings = <
&trans  &kp C_BRI_UP  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp ESCAPE                    &none         &kp LG(SPACE)  &kp LEFT_PARENTHESIS  &kp EQUAL     &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp BSPC
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5           &none  &none  &none  &kp NUMBER_6   &kp N7                &kp NUMBER_8  &kp NUMBER_9           &kp NUMBER_0    &kp PG_UP
&trans  &kp HASH      &kp PLUS      &kp GRAVE     &kp MINUS     &kp PLUS      &none           &none         &kp PERIOD     &kp COMMA             &kp COMMA     &kp PERIOD             &kp END         &kp PG_DN
                                    &trans        &trans        &trans                                      &trans         &trans                &trans
            >;
        };

        symbols {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp RIGHT_BRACE  &kp LESS_THAN      &kp LEFT_BRACE  &kp PIPE          &kp PRCNT                  &none         &kp CARET    &kp LEFT_PARENTHESIS  &kp EQUAL     &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp BSPC
&trans  &kp EXCLAMATION  &kp GREATER_THAN   &kp COLON       &kp ASTERISK      &kp SQT             &none  &none  &none  &kp AT_SIGN  &kp LCMD              &kp LEFT_ALT  &kp LEFT_SHIFT         &kp LCTRL       &kp GRAVE
&trans  &kp AMPERSAND    &kp RIGHT_BRACKET  &kp SEMICOLON   &kp LEFT_BRACKET  &kp HASH   &none           &none         &kp UNDER    &kp PERIOD            &kp COMMA     &kp TILDE              &kp QUESTION    &kp TILDE
                                            &trans          &trans            &kp SPACE                                &kp RET      &trans                &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1  &kp F2      &kp F3     &kp F4       &kp F5     &kp F6                         &none         &kp F7              &kp F8               &kp F9          &kp F10          &kp F11    &kp F12
&trans  &kp LG(Z)   &kp LG(X)  &kp LG(C)    &kp LG(V)  &kp PG_UP               &none  &none  &none  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp UP_ARROW    &mkp LCLK        &mkp RCLK  &kp PAUSE_BREAK
&trans  &sys_reset  &trans     &bootloader  &trans     &kp PAGE_DOWN  &none           &none         &trans              &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &none      &kp C_NEXT
                               &trans       &trans     &trans                                       &trans              &trans               &trans
            >;
        };
    };
};
